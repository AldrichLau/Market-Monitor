dbWriteTable(con2, "index_generic_price", df_price, append = TRUE)
}
bonds_info <- dbReadTable(con2, "bonds_info") %>%
filter(date < "2020-10-28")
hist_data <- dbReadTable(con2, "hist_data") %>%
filter(date < "2020-10-28")
start_time = Sys.time()
cal_write_index(con2, bonds_info, hist_data, cats = c("cat", "rating2", "Label"),
method = "weight_wt")
cal_write_index1(con2, bonds_info, hist_data, cats = c("EM", "IG Corporate", "Financials", "Tier 2", "LGFV", "AT1", "Industry", "HY Property"),
group = "rating2", method = "weight_wt", append = FALSE)
cal_write_index1(con2, bonds_info, hist_data, cats = c("EM", "IG Corporate", "Financials", "Tier 2", "LGFV", "AT1", "Industry", "HY Property"),
group = "Label", method = "weight_wt", append = FALSE)
end_time = Sys.time()
end_time - start_time
i = "cat"
# i = "cat"
index_price_old = dbGetQuery(
con2,
sprintf("SELECT * FROM %s WHERE date >= '%s'",
paste("index_", i, "_price", sep=""),
max(index_price_date$date))
)
View(index_price_old)
method = "weight_wt"
index_price = cal_index(hist_data, index_weights[[i]], group = i, method)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
filter(date > max(index_price_date$date)) %>%
bind_rows(index_price)
test
View(test)
# 计算index price
index_price_date = dbGetQuery(con2, "SELECT DISTINCT date FROM index_cat_price")
hist_data = dbGetQuery(con2, sprintf("SELECT * FROM hist_data WHERE date >= '%s'", max(index_price_date$date)))
index_price = cal_index(hist_data, index_weights[[i]], group = i, method)
View(index_price_old)
View(index_price)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
filter(date > max(index_price_date$date)) %>%
bind_rows(index_price)
View(test)
View(index_price)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
filter(date > max(index_price_date$date)) %>%
bind_rows(index_price_old)
View(test)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
filter(date > max(index_price_date$date)) %>%
bind_rows(index_price_old) %>%
group_by(!!sym(i)) %>%
arrange(date)
View(test)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
filter(date > max(index_price_date$date)) %>%
bind_rows(index_price_old) %>%
arrange(date) %>%
group_by(!!sym(i))
View(test)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
filter(date > max(index_price_date$date)) %>%
bind_rows(index_price_old) %>%
arrange(date, !!sym(i)) %>%
group_by(!!sym(i))
View(test)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
filter(date > max(index_price_date$date)) %>%
bind_rows(index_price_old) %>%
arrange(!!sym(i), date) %>%
group_by(!!sym(i))
View(test)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
filter(date > max(index_price_date$date)) %>%
bind_rows(index_price_old) %>%
arrange(!!sym(i), date) %>%
group_by(!!sym(i)) %>%
mutate(i1 = cumprod(index_price_net),
i2 = cumprod(index_price_total))
View(test)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
mutate(price_chg = index_price_net / lag(index_price_net),
price_total_chg = index_price_total / lag(iindex_price_total))
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
group_by(!!sym(i))
View(test)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
group_by(!!sym(i)) %>%
mutate(price_chg = index_price_net / lag(index_price_net),
price_total_chg = index_price_total / lag(iindex_price_total))
View(test)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
group_by(!!sym(i)) %>%
mutate(price_chg = index_price_net / lag(index_price_net),
price_total_chg = index_price_total / lag(index_price_total))
View(test)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(date, !!sym(i)) %>%
group_by(!!sym(i)) %>%
mutate(price_chg = index_price_net / lag(index_price_net),
price_total_chg = index_price_total / lag(index_price_total)) %>%
na.omit()
View(test)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(date, !!sym(i)) %>%
group_by(!!sym(i)) %>%
mutate(price_chg = index_price_net / lag(index_price_net) - 1,
price_total_chg = index_price_total / lag(index_price_total) - 1) %>%
na.omit()
View(test)
index_price = cal_index(hist_data, index_weights[[i]], group = i, method)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(date, !!sym(i)) %>%
group_by(!!sym(i)) %>%
mutate(price_chg = index_price_net / lag(index_price_net) - 1,
price_total_chg = index_price_total / lag(index_price_total) - 1) %>%
na.omit() %>%
bind_rows(index_price_old)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(date, !!sym(i)) %>%
group_by(!!sym(i)) %>%
mutate(price_chg = index_price_net / lag(index_price_net) - 1,
price_total_chg = index_price_total / lag(index_price_total) - 1) %>%
na.omit() %>%
bind_rows(index_price_old)
View(test)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(date, !!sym(i)) %>%
group_by(!!sym(i)) %>%
mutate(price_chg = index_price_net / lag(index_price_net) - 1,
price_total_chg = index_price_total / lag(index_price_total) - 1) %>%
na.omit()
View(test)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(!!sym(i), date) %>%
group_by(!!sym(i)) %>%
mutate(price_chg = index_price_net / lag(index_price_net) - 1,
price_total_chg = index_price_total / lag(index_price_total) - 1) %>%
na.omit()
View(test)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(!!sym(i), date) %>%
group_by(!!sym(i)) %>%
mutate(price_chg = index_price_net / lag(index_price_net) - 1,
price_total_chg = index_price_total / lag(index_price_total) - 1)
View(test)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(!!sym(i), date) %>%
group_by(!!sym(i)) %>%
mutate(price_chg = index_price_net / lag(index_price_net) - 1,
price_total_chg = index_price_total / lag(index_price_total) - 1) %>%
na.omit() %>%
bind_rows(index_price_old)
View(test)
est <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(!!sym(i), date) %>%
group_by(!!sym(i)) %>%
mutate(price_chg = index_price_net / lag(index_price_net) - 1,
price_total_chg = index_price_total / lag(index_price_total) - 1) %>%
na.omit() %>%
bind_rows(index_price_old) %>%
arrange(!!sym(i), date)
View(test)
View(index_price_old)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(!!sym(i), date) %>%
group_by(!!sym(i)) %>%
mutate(price_chg = index_price_net / lag(index_price_net) - 1,
price_total_chg = index_price_total / lag(index_price_total) - 1) %>%
na.omit() %>%
bind_rows(index_price_old) %>%
arrange(!!sym(i), date)
View(test)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(!!sym(i), date) %>%
group_by(!!sym(i)) %>%
mutate(price_chg = index_price_net / lag(index_price_net) - 1,
price_total_chg = index_price_total / lag(index_price_total) - 1) %>%
na.omit() %>%
bind_rows(index_price_old) %>%
arrange(!!sym(i), date)
View(test)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(!!sym(i), date) %>%
group_by(!!sym(i)) %>%
mutate(price_chg = index_price_net / lag(index_price_net) - 1,
price_total_chg = index_price_total / lag(index_price_total) - 1) %>%
na.omit() %>%
bind_rows(index_price_old) %>%
arrange(!!sym(i), date) %>%
replace(NA, 0)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(!!sym(i), date) %>%
group_by(!!sym(i)) %>%
mutate(price_chg = index_price_net / lag(index_price_net) - 1,
price_total_chg = index_price_total / lag(index_price_total) - 1) %>%
na.omit() %>%
bind_rows(index_price_old) %>%
arrange(!!sym(i), date) %>%
replace("price_chg", NA, 0)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(!!sym(i), date) %>%
group_by(!!sym(i)) %>%
mutate(price_chg = index_price_net / lag(index_price_net) - 1,
price_total_chg = index_price_total / lag(index_price_total) - 1) %>%
na.omit() %>%
bind_rows(index_price_old) %>%
arrange(!!sym(i), date) %>%
replace_na(0)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(!!sym(i), date) %>%
group_by(!!sym(i)) %>%
mutate(price_chg = index_price_net / lag(index_price_net) - 1,
price_total_chg = index_price_total / lag(index_price_total) - 1) %>%
na.omit() %>%
bind_rows(index_price_old) %>%
arrange(!!sym(i), date) %>%
mutate(price_chg = if_else(is.na(price_chg), 0, price_chg),
price_total_chg = if_else(is.na(price_total_chg), 0, price_total_chg))
View(test)
# i = "cat"
index_price_old = dbGetQuery(
con2,
sprintf("SELECT %s, index_price_net, index_price_total FROM %s WHERE date = '%s'",
!!sym(i),
paste("index_", i, "_price", sep=""),
max(index_price_date$date))
)
# i = "cat"
index_price_old = dbGetQuery(
con2,
sprintf("SELECT %s, index_price_net, index_price_total FROM %s WHERE date = '%s'",
i,
paste("index_", i, "_price", sep=""),
max(index_price_date$date))
)
View(index_price_old)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(!!sym(i), date) %>%
left_join(index_price_old)
# i = "cat"
index_price_old = dbGetQuery(
con2,
sprintf("SELECT %s, index_price_net AS p_net, index_price_total AS p_total FROM %s WHERE date = '%s'",
i,
paste("index_", i, "_price", sep=""),
max(index_price_date$date))
)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(!!sym(i), date) %>%
left_join(index_price_old)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(!!sym(i), date) %>%
left_join(index_price_old, by = !!sym(i))
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(!!sym(i), date) %>%
left_join(index_price_old, by = i)
View(test)
# i = "cat"
index_price_old = dbGetQuery(
con2,
sprintf("SELECT %s, index_price_net AS p_net, index_price_total AS p_total FROM %s WHERE date = '%s'",
i,
paste("index_", i, "_price", sep=""),
max(index_price_date$date))
)
View(index_price_old)
test <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(!!sym(i), date) %>%
left_join(index_price_old, by = i) %>%
group_by(!!sym(i)) %>%
mutate(index_price_net = index_price_net * p_net,
index_price_total = index_price_total * p_total)
View(test)
# 计算index_sum_table_Label & rating2
index_price_old1 = dbGetQuery(
con2,
sprintf("SELECT Label, cat, index_price_net AS p_net, index_price_total AS p_total FROM index_sum_table_Label WHERE date = '%s'",
max(index_price_date$date)))
index_price_old2 = dbGetQuery(
con2,
sprintf("SELECT rating2, cat, index_price_net AS p_net, index_price_total AS p_total FROM index_sum_table_rating2 WHERE date = '%s'",
max(index_price_date$date)))
# 计算index_sum_table_Label & rating2
index_price_old1 = dbGetQuery(
con2,
sprintf("SELECT Label, cat, index_price_net AS p_net, index_price_total AS p_total FROM index_sum_table_Label WHERE date = '%s'",
max(index_price_date$date)))
index_price_old2 = dbGetQuery(
con2,
sprintf("SELECT rating2, cat, index_price_net AS p_net, index_price_total AS p_total FROM index_sum_table_rating2 WHERE date = '%s'",
max(index_price_date$date)))
# 计算按照cat * rating2 / Label交叉分组的指数
cal_index1 <- function(con2, bonds_info, hist_data, cats = c("EM", "IG Corporate", "Financials", "Tier 2", "LGFV", "AT1", "Industry", "HY Property"),
group = "rating2", method = "weight_wt") {
bonds_info <- tidy_bonds(bonds_info, "cat")
index_prices = list()
for (i in cats) {
df_weight <- cal_weight1(bonds_info, i, group)
index_prices[[i]] <- cal_index(hist_data, df_weight, group, method) %>%
mutate(cat = i)
}
df_prices <- bind_rows(index_prices)
df_prices
}
test <- cal_index1(con2, bonds_info_tidy$cat, hist_data, cats = c("EM", "IG Corporate", "Financials", "Tier 2", "LGFV", "AT1", "Industry", "HY Property"),
group = "rating2", method = "weight_wt")
test <- cal_index1(con2, bonds_info, hist_data, cats = c("EM", "IG Corporate", "Financials", "Tier 2", "LGFV", "AT1", "Industry", "HY Property"),
group = "Label", method = "weight_wt")
View(hist_data)
View(test)
test <- cal_index1(con2, bonds_info, hist_data, cats = c("EM", "IG Corporate", "Financials", "Tier 2", "LGFV", "AT1", "Industry", "HY Property"),
group = "Label", method = "weight_wt") %>%
arrange(cat, Label, date) %>%
left_join(index_price_old1, by = c("cat", "Label"))
View(test)
View(index_price_old1)
View(hist_data)
View(bonds_info)
bonds_info = dbGetQuery(con2, sprintf("SELECT * FROM bonds_info WHERE date > '%s'",
ymd(max(index_price_date$date)) %m-% months(2)))
test <- cal_index1(con2, bonds_info, hist_data, cats = c("EM", "IG Corporate", "Financials", "Tier 2", "LGFV", "AT1", "Industry", "HY Property"),
group = "Label", method = "weight_wt") %>%
arrange(cat, Label, date) %>%
left_join(index_price_old1, by = c("cat", "Label")) %>%
group_by(cat, Label) %>%
mutate(index_price_net = index_price_net * p_net,
index_price_total = index_price_total * p_total)
View(test)
test <- cal_index1(con2, bonds_info, hist_data, cats = c("EM", "IG Corporate", "Financials", "Tier 2", "LGFV", "AT1", "Industry", "HY Property"),
group = "Label", method = "weight_wt") %>%
arrange(cat, Label, date) %>%
left_join(index_price_old1, by = c("cat", "Label")) %>%
group_by(cat, Label) %>%
mutate(index_price_net = index_price_net * p_net,
index_price_total = index_price_total * p_total)
View(test)
View(test)
max(index_price_date$date)
i
index_prices[[i]] <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(!!sym(i), date) %>%
left_join(index_price_old, by = i) %>%
group_by(!!sym(i)) %>%
mutate(index_price_net = index_price_net * p_net,
index_price_total = index_price_total * p_total) %>%
select(-p_net, -p_total)
index_prices[[i]]
test <- index_prices[[i]]
View(test)
index_price_Label <- cal_index1(con2, bonds_info, hist_data, cats = c("EM", "IG Corporate", "Financials", "Tier 2", "LGFV", "AT1", "Industry", "HY Property"),
group = "Label", method = "weight_wt") %>%
arrange(cat, Label, date) %>%
left_join(index_price_old1, by = c("cat", "Label")) %>%
group_by(cat, Label) %>%
mutate(index_price_net = index_price_net * p_net,
index_price_total = index_price_total * p_total) %>%
select(-p_net, -p_total)
index_price_rating2 <- cal_index1(con2, bonds_info, hist_data, cats = c("EM", "IG Corporate", "Financials", "Tier 2", "LGFV", "AT1", "Industry", "HY Property"),
group = "rating2", method = "weight_wt") %>%
arrange(cat, rating2, date) %>%
left_join(index_price_old1, by = c("cat", "rating2")) %>%
group_by(cat, rating2) %>%
mutate(index_price_net = index_price_net * p_net,
index_price_total = index_price_total * p_total) %>%
select(-p_net, -p_total) %>%
filter(date > max(index_price_date$date))
index_price_rating2 <- cal_index1(con2, bonds_info, hist_data, cats = c("EM", "IG Corporate", "Financials", "Tier 2", "LGFV", "AT1", "Industry", "HY Property"),
group = "rating2", method = "weight_wt") %>%
arrange(cat, rating2, date) %>%
left_join(index_price_old2, by = c("cat", "rating2")) %>%
group_by(cat, rating2) %>%
mutate(index_price_net = index_price_net * p_net,
index_price_total = index_price_total * p_total) %>%
select(-p_net, -p_total) %>%
filter(date > max(index_price_date$date))
View(index_price_rating2)
# 更新指数价格和权重数据
#cats = c("cat", "rating2", "Label")
#method = "weight_wt"
update_index <- function(con2, cats = c("cat", "rating2", "Label"),
method = "weight_wt") {
# 找下最新指数数据到哪
index_wt_date = dbGetQuery(con2, "SELECT DISTINCT date FROM index_cat_wt")
bonds_info <- dbGetQuery(con2, sprintf("SELECT * FROM bonds_info WHERE date > '%s'", max(index_wt_date$date)))
if (dim(bonds_info)[1] == 0) {
print("latest bonds info, no need to update")
} else {
index_weights = list()
bonds_info_tidy = list()
for (i in cats) {
bonds_info_tidy[[i]] = tidy_bonds(bonds_info, i)
}
for (i in cats) {
index_weights[[i]] = cal_weight(bonds_info_tidy[[i]], i)
dbWriteTable(con2, paste("index_", i, "_wt", sep=""), index_weights[[i]], append = TRUE)
}
# generic单列
tidy_df <- tidy_bonds(bonds_info, group = "cat") %>%
filter(cat == "HY Property") %>%
mutate(dur_cat = cut(duration, breaks = c(0, 1, 3, 5, 10, Inf),
labels = c("0~1", "1~3", "3~5", "5~10", "10+")),
generic = paste(Label, dur_cat, sep = "_")) %>%
arrange(generic, date)
df_weights <- cal_weight(tidy_df, "generic")
dbWriteTable(con2, "index_generic_wt", df_weights, append = TRUE)
}
# 计算index price
index_price_date = dbGetQuery(con2, "SELECT DISTINCT date FROM index_cat_price")
hist_data = dbGetQuery(con2, sprintf("SELECT * FROM hist_data WHERE date >= '%s'", max(index_price_date$date)))
if (dim(hist_data)[1] == 0) {
print("latest hist date, no need to update.")
} else{
bonds_info = dbGetQuery(con2, sprintf("SELECT * FROM bonds_info WHERE date > '%s'",
ymd(max(index_price_date$date)) %m-% months(2)))
bonds_info_tidy = list()
for (i in cats) {
bonds_info_tidy[[i]] = tidy_bonds(bonds_info, i)
}
index_weights = list()
for (i in cats) {
index_weights[[i]] = cal_weight(bonds_info_tidy[[i]], i)
}
index_prices = list()
for (i in cats) {
index_price_old = dbGetQuery(
con2,
sprintf("SELECT %s, index_price_net AS p_net, index_price_total AS p_total FROM %s WHERE date = '%s'",
i,
paste("index_", i, "_price", sep=""),
max(index_price_date$date))
)
index_prices[[i]] <- cal_index(hist_data, index_weights[[i]], group = i, method) %>%
arrange(!!sym(i), date) %>%
left_join(index_price_old, by = i) %>%
group_by(!!sym(i)) %>%
mutate(index_price_net = index_price_net * p_net,
index_price_total = index_price_total * p_total) %>%
select(-p_net, -p_total) %>%
filter(date > max(index_price_date$date))
dbWriteTable(con2, paste("index_", i, "_price", sep=""), index_prices[[i]], append = TRUE)
}
# generic 单列
df_price <- cal_index(hist_data, df_weights, group = "generic")
dbWriteTable(con2, "index_generic_price", df_price, append = TRUE)
# 计算index_sum_table_Label & rating2
index_price_old1 = dbGetQuery(
con2,
sprintf("SELECT Label, cat, index_price_net AS p_net, index_price_total AS p_total FROM index_sum_table_Label WHERE date = '%s'",
max(index_price_date$date)))
index_price_old2 = dbGetQuery(
con2,
sprintf("SELECT rating2, cat, index_price_net AS p_net, index_price_total AS p_total FROM index_sum_table_rating2 WHERE date = '%s'",
max(index_price_date$date)))
index_price_Label <- cal_index1(con2, bonds_info, hist_data, cats = c("EM", "IG Corporate", "Financials", "Tier 2", "LGFV", "AT1", "Industry", "HY Property"),
group = "Label", method = "weight_wt") %>%
arrange(cat, Label, date) %>%
left_join(index_price_old1, by = c("cat", "Label")) %>%
group_by(cat, Label) %>%
mutate(index_price_net = index_price_net * p_net,
index_price_total = index_price_total * p_total) %>%
select(-p_net, -p_total)
index_price_rating2 <- cal_index1(con2, bonds_info, hist_data, cats = c("EM", "IG Corporate", "Financials", "Tier 2", "LGFV", "AT1", "Industry", "HY Property"),
group = "rating2", method = "weight_wt") %>%
arrange(cat, rating2, date) %>%
left_join(index_price_old2, by = c("cat", "rating2")) %>%
group_by(cat, rating2) %>%
mutate(index_price_net = index_price_net * p_net,
index_price_total = index_price_total * p_total) %>%
select(-p_net, -p_total) %>%
filter(date > max(index_price_date$date))
dbWriteTable(con2, "index_sum_table_Label", index_price_Label, append = TRUE)
dbWriteTable(con2, "index_sum_table_rating2", index_price_rating2, append = TRUE)
}
}
con1 <- dbConnect(RSQLite::SQLite(), "CNUSD.sqlite")
con2 <- dbConnect(RSQLite::SQLite(), "NEW_CNUSD.sqlite")
source("market monitor dependency.R")
con1 <- dbConnect(RSQLite::SQLite(), "CNUSD.sqlite")
con2 <- dbConnect(RSQLite::SQLite(), "NEW_CNUSD.sqlite")
bonds_info <- dbReadTable(con2, "bonds_info") %>%
filter(date < "2020-10-28")
hist_data <- dbReadTable(con2, "hist_data") %>%
filter(date < "2020-10-28")
start_time = Sys.time()
cal_write_index(con2, bonds_info, hist_data, cats = c("cat", "rating2", "Label"),
method = "weight_wt")
cal_write_index1(con2, bonds_info, hist_data, cats = c("EM", "IG Corporate", "Financials", "Tier 2", "LGFV", "AT1", "Industry", "HY Property"),
group = "rating2", method = "weight_wt", append = FALSE)
cal_write_index1(con2, bonds_info, hist_data, cats = c("EM", "IG Corporate", "Financials", "Tier 2", "LGFV", "AT1", "Industry", "HY Property"),
group = "Label", method = "weight_wt", append = FALSE)
end_time = Sys.time()
end_time - start_time
dbDisconnect(con2)
start_time = Sys.time()
update_newcnusd(con1, con2)
end_time = Sys.time()
end_time - start_time
con1 <- dbConnect(RSQLite::SQLite(), "CNUSD.sqlite")
con2 <- dbConnect(RSQLite::SQLite(), "NEW_CNUSD.sqlite")
start_time = Sys.time()
update_newcnusd(con1, con2)
end_time = Sys.time()
end_time - start_time
start_time = Sys.time()
update_index(con2, cats = c("cat", "rating2", "Label"), method = "weight_wt")
end_time = Sys.time()
end_time - start_time
con1 <- dbConnect(RSQLite::SQLite(), "CNUSD.sqlite")
con2 <- dbConnect(RSQLite::SQLite(), "NEW_CNUSD.sqlite")
con2 <- dbConnect(RSQLite::SQLite(), "NEW_CNUSD.sqlite")
dbDisconnect(con1)
dbDisconnect(con2)
con2 <- dbConnect(RSQLite::SQLite(), "NEW_CNUSD.sqlite")
